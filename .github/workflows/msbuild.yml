name: Build and Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        ## Macos jobs tend to stall -- not including them for now
        ## Windows jobs fail on some lit tests and sometimes fail even to
        ## setup a work environment (e.g. dotnet installation)
        os: [ubuntu-latest]
        ##os: [ubuntu-latest, windows-latest, ubuntu-16.04]
        ##os: [ubuntu-latest, macos-latest]
        ##os: [ubuntu-latest, macos-latest, windows-latest, ubuntu-16.04]
        ## Size of the following array must match --num-shards in lit command
        shard: [1, 2, 3, 4, 5]
        ##shard: [1, 2, 3]
        include:
        - os:                  'ubuntu-latest'
          os_for_build:        'ubuntu'
          os_for_release_zip:  'ubuntu-16.04'
        ##- os:                  'ubuntu-16.04'
        ##  os_for_build:        'ubuntu'
        ##  os_for_release_zip:  'ubuntu-16.04'
        ##- os:                  'macos-latest'
        ##  os_for_build:        'osx'
        ##  os_for_release_zip:  'osx-10.14.1'
        ##- os:                  'windows-latest'
        ##  os_for_build:        'win'
        ##  os_for_release_zip:  'win'

      fail-fast: false
    steps:
    - name: Manually sync certs
      if: runner.os == 'Linux'
      run: cert-sync /etc/ssl/certs/ca-certificates.crt
    - uses: actions/setup-python@v1
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: '3.1.x' # SDK Version to use; x will use the latest version of the 3.1 channel
    - name: C++ for ubuntu 16.04
      if: matrix.os == 'ubuntu-16.04'
      run: |
        sudo apt-get install -y build-essential
    - uses: actions/setup-python@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Upgrade outdated pip
      run: python -m pip install --upgrade pip
    - name: Install lit
      run: pip install lit OutputCheck pyyaml
    - uses: actions/setup-node@v1
    - run: npm install bignumber.js
    - name: Checkout Dafny
      uses: actions/checkout@v2
      with:
        submodules: recursive
        path: dafny
    - name: Create release
      run: |
        python dafny/Scripts/package.py 0.0.0-CI --os ${{ matrix.os_for_build }} --skip_manual=true --trial=true
    - if: runner.os == 'Windows'
      shell: pwsh
      run: |
        Expand-Archive dafny/Package/dafny-0.0.0-CI-x64-${{ matrix.os_for_release_zip }}.zip unzippedRelease
    - if: runner.os != 'Windows'
      run: |
        unzip dafny/Package/dafny-0.0.0-CI-x64-${{ matrix.os_for_release_zip }}.zip -d unzippedRelease
        sudo chmod +x $PWD/unzippedRelease/dafny/dafny
    - name: Run lit tests
      run: |
        lit --time-tests -v --num-shards=5 --run-shard=${{ matrix.shard }} --param executable=$PWD/unzippedRelease/dafny/dafny --param serverExecutable=$PWD/unzippedRelease/dafny/DafnyServer dafny/Test
